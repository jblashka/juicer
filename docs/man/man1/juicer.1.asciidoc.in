juicer(1)
=========
:doctype:manpage
:man source:   Juicer
:man version:  %VERSION%
:man manual:   Pulp repos and release carts

NAME
----
juicer - create and push release carts, upload items to pulp



SYNOPSIS
--------
juicer [-vvv] [-V] command subcommand [PARAMETERS ...] [OPTIONS ...]



DESCRIPTION
-----------
A release cart is a description of what RPMs you want to push into a
specific repository. A single cart can specify multiple repos and
associated items. Release cart descriptions are saved so you can
easily "promote" a cart to another environment.

RPMs ('items') need not be stored on your local machine. Juicer can
handle remote resources as well. Anywhere an option argument is
described as 'item' you can give the path to a local directory, or
rpm, as well as an RPM available over HTTP. HTTP directory indexes
work as well; the page is parsed and links to rpm files are added to
your cart.


COMMON OPTIONS
--------------

*-v*, *--verbose*::
Increase the verbosity (up to 3x). In usage specify '-v' *before* 'COMMAND'.

*-V*, *--version*::
Print the version that you're using of juicer.


CART CREATE
-----------
usage: juicer cart create 'CARTNAME' [-f manifest] [-r 'REPONAME' 'items' ... [ -r 'REPONAME' 'items' ]]

Create a cart with the items specified.

*CARTNAME*::
The name of the new release cart.

*-f* 'manifest'::
Create a cart from a manifest file. A manifest file is written in
the following format:

name: version-release

*-r* 'REPONAME'::
Name of the reopsitory to install 'ITEMS' into. The '-r' option may be
given multiple times.

*ITEM* ...::
Items to add to the cart in repository 'REPONAME'.

////////////////////////////////////////////////////////////////////////
CREATE-LIKE
-----------
usage: juicer create-like 'CARTNAME' 'OLDCARTNAME' 'ITEM' [ item2 [ ...] ]

Create a new cart based off an existing one.

*CARTNAME*::
The name of your new release cart.

*OLDCARTNAME*::
Cart to copy from.

*ITEMS*::
Items to update in the cart.

////////////////////////////////////////////////////////////////////////


RPM DELETE
----------
usage: juicer rpm delete -r REPO-NAME ITEM ITEM ... --in [ENV ...]

Delete rpms in a repository.

*REPO-NAME*::
The name of the repo rpms live in.

*ITEM*::
Filename of rpm to delete.

*--in* 'ENVIRONMENT' ... ::
The environments to delete rpms in.


////////////////////////////////////////
EDIT
----
usage: juicer edit CARTNAME

Interactively edit a release cart.

*CARTNAME*::
The name of your release cart.
////////////////////////////////////////


HELLO
------
usage: juicer hello [--in 'ENVIRONMENT' ...]

Test connection settings in *~/.juicer.conf*

*ENVIRONMENT*::
The environments to limit connecting testing to.


CART MERGE
----------
usage: juicer cart merge CART1 [...] CARTN  --name NEWCARTNAME

Merges the contents of N carts into 'NEWCARTNAME'. Defaults to
updating 'CART1'.

*CART#*::
Names of N carts to merge.

*--name* 'NEWCARTNAME' ::
(Optional) Name of resultant cart, defaults to first cart specified.



CART PULL
---------
usage: juicer cart pull 'CARTNAME'

Pulls a description of a cart from the pulp server and saves it on
your local machine in ~/.juicer-carts/.

*CARTNAME*::
The name of the cart to pull.



CART PUSH
---------
usage: juicer cart push 'CARTNAME' [--in 'ENVIRONMENT' ...]

Pushes/Updates a cart on the pulp server.

*CARTNAME*::
The name of the cart to push.

*--in* 'ENVIRONMENT' ... ::
The environments to push the new/updated cart to.


REPO PUBLISH
------------
usage: juicer repo publish 'REPO' [--in 'ENVIRONMENT' ...]

Publishes a repository, regenerating it's metadata.

*REPO*::
The name of the repo to publish.

*--in* 'ENVIRONMENT' ... ::
The environments to publish repository in.


CART PROMOTE
------------
usage: juicer cart promote 'CARTNAME'

Promote a release cart to the next release environment in its directed
graph.

*CARTNAME*::
The release cart to promote.


CART UPDATE
-----------
usage: juicer cart update 'CARTNAME' [-f 'MANIFEST'] [-r 'REPONAME' 'ITEMS' ... [ -r 'REPONAME' 'items' ]]

Update the specified cart with the items specified.

Updating a cart will add an item to the cart if it wasn't originally
present or overwrite an item if it already was.

*CARTNAME*::
The name of the new release cart.

*-f* 'MANIFEST'::
Update a cart with a manifest file. A manifest file is written in
the following format:

name: version-release

*-r* 'REPONAME'::
Name of the reopsitory to install 'ITEMS' into. The '-r' option may be
given multiple times.

*ITEMS* ...::
Items to add to the cart in repository 'REPONAME'.


RPM SEARCH
----------
usage: juicer rpm search 'ITEM' [-r 'REPO' ...] [-c] [--in 'ENVIRONMENT' ...]

Search for an RPM ('item') in pulp.

*ITEM*::
Name of the RPM to search for.

*-r* 'REPO' ...::
The repo(s) to limit search scope to.

*-c*::
Search for the package in carts as well.

*--in* 'ENVIRONMENT' ...::
The environments to limit search scope to.



CART SHOW
---------
usage: juicer cart show 'CARTNAME'

Print the contents of a cart.

*CARTNAME*::
The name of the release cart to show.


CART LIST
---------
usage: juicer cart list ['CART_GLOB' [ 'CART_GLOB' ...]]

List all carts. Optionally provide one or more 'CART_GLOB' to only
list carts whose names match the given pattern. Pattern matching uses
standard *fnmatch* rules.

*CART_GLOB*::
The pattern to match. Default: ***



RPM UPLOAD
----------
usage: juicer rpm upload -r 'REPO' 'ITEM' ... [--in 'ENVIRONMENT' ...]

Upload multiple RPMs or files ('ITEM') to 'REPO'.

*-r* 'REPO' ...::
The repo that 'ITEM' will be uploaded to. The '-r' option may be given
multiple times.

*ITEM* ...::
Name of the RPM(s) or file(s) to upload.

*--in* 'ENVIRONMENT' ...::
The environments which items will be uploaded to.



EXAMPLES
--------

'items' given may be any number and combination of the following input
resource types:

*local*::
    ./directory/of/items | ./path/to/item.rpm | /path/to/item*

    The items given are directly uploaded to the pulp server.

Here is an example of how you would specify a directory of *local*
RPMs and a direct path:

    $ juicer rpm upload -r javastuff \
        ~/my-java-app/rpmbuild/noarch/ \
        ~/misc-java-rpms/megafrobber-0.8.0.noarch.rpm


*remote*::

    http[s]://rpms/directory/ | http[s]://website/some-thing.rpm

    URL to an HTTP directory index or an RPM. RPM paths are parsed
    from the index and then added to your cart. All remote items are
    synced when you upload or push.

Here is an example of how you would specify a directory of *remote*
RPMs and a specific remote RPM:

    $ juicer rpm upload -r javastuff \
        http://jenkins.foo/job/results/ \
        http://foo.bar/rpms/megafrobber-0.8.0.noarch.rpm

*create and show a cart*:

    $ juicer cart create juicer-0.1.7 \
        -r juicer \
        http://kojipkgs.fedoraproject.org/..../juicer-0.1.7-1.fc17.noarch.rpm \
        -r juicer-deps \
        ./rpm-build/noarch/juicer-misc-0.1.7-1.fc17.noarch.rpm
    Creating cart 'juicer-0.1.7'.
    Saved cart 'juicer-0.1.7'.
    JUICER
    ------
    http://kojipkgs.fedoraproject.org/..../juicer-0.1.7-1.fc17.noarch.rpm

    JUICER-DEPS
    -----------
    ./rpm-build/noarch/juicer-misc-0.1.7-1.fc17.noarch.rpm

The cart description is saved into *~/.juicer-carts/* as
*juicer-0.1.7.json*. We could show it again simply:

    $ juicer cart show juicer-0.1.7
    JUICER
    ------
    http://kojipkgs.fedoraproject.org/..../juicer-0.1.7-1.fc17.noarch.rpm

    JUICER-DEPS
    -----------
    ./rpm-build/noarch/juicer-misc-0.1.7-1.fc17.noarch.rpm

Remote items will be synced automatically when we push this cart to
the repositories. Items synced are saved into
*~/.juicer-carts/*'CART-NAME'*-remotes/*.

Similarly, when using the *upload* command, remotes are also synced.


FILES
-----
*~/.juicer.conf* -- Juicer configuration file

*~/.juicer-carts/* -- Cart storage location


AUTHOR
------
Juicer was written by GCA-PC, Red Hat, Inc..

This man page was written by Tim Bielawa <tbielawa@redhat.com>.



COPYRIGHT
---------
Copyright Â© 2012, Red Hat, Inc..

Juicer is released under the terms of the GPLv3+ License.



SEE ALSO
--------
*juicer-admin*(1), *juicer.conf*(5), *fnmatch*(3)

The Juicer Homepage: <https://github.com/juicer/juicer/>
